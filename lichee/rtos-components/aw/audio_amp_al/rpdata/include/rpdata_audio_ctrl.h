/**

* Copyright (c) 2019-2025 Allwinner Technology Co., Ltd. ALL rights reserved.
*
* Allwinner is a trademark of Allwinner Technology Co.,Ltd., registered in
* the the people's Republic of China and other countries.
* All Allwinner Technology Co.,Ltd. trademarks are used with permission.
*
* DISCLAIMER
* THIRD PARTY LICENCES MAY BE REQUIRED TO IMPLEMENT THE SOLUTION/PRODUCT.
* IF YOU NEED TO INTEGRATE THIRD PARTY’S TECHNOLOGY (SONY, DTS, DOLBY, AVS OR MPEGLA, ETC.)
* IN ALLWINNERS’SDK OR PRODUCTS, YOU SHALL BE SOLELY RESPONSIBLE TO OBTAIN
* ALL APPROPRIATELY REQUIRED THIRD PARTY LICENCES.
* ALLWINNER SHALL HAVE NO WARRANTY, INDEMNITY OR OTHER OBLIGATIONS WITH RESPECT TO MATTERS
* COVERED UNDER ANY REQUIRED THIRD PARTY LICENSE.
* YOU ARE SOLELY RESPONSIBLE FOR YOUR USAGE OF THIRD PARTY’S TECHNOLOGY.
*
*
* THIS SOFTWARE IS PROVIDED BY ALLWINNER"AS IS" AND TO THE MAXIMUM EXTENT
* PERMITTED BY LAW, ALLWINNER EXPRESSLY DISCLAIMS ALL WARRANTIES OF ANY KIND,
* WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING WITHOUT LIMITATION REGARDING
* THE TITLE, NON-INFRINGEMENT, ACCURACY, CONDITION, COMPLETENESS, PERFORMANCE
* OR MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
* IN NO EVENT SHALL ALLWINNER BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
* LOSS OF USE, DATA, OR PROFITS, OR BUSINESS INTERRUPTION)
* HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
* STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
* OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#ifndef __RPDATA_AUDIO_CRTL_H__
#define __RPDATA_AUDIO_CRTL_H__

typedef enum {
	RPDATA_CTL_NONE 	= 0,
	RPDATA_CTL_INIT,
	RPDATA_CTL_CONFIG,            // config algo param
	RPDATA_CTL_MSPEECH_STATUS,    // config mspeech status
	RPDATA_CTL_START,             // start algo
	RPDATA_CTL_PAUSE,             // pause algo
	RPDATA_CTL_RESUME,            // resume algo
	RPDATA_CTL_STOP,              // stop algo
	RPDATA_CTL_RELEASE,           // release algo
	RPDATA_CTL_ENABLE_ALG,        // enable algorithm
	RPDATA_CTL_ENABLE_VAD,        // enable/disable vad
	RPDATA_CTL_ENABLE_ASR,        // enable/disable asr
	RPDATA_CTL_DUMP_MERGE_DATA,   // input data(2 mic + 1 ref/ 6ch eq) + output data (aec / 6ch eq)
	RPDATA_CTL_START_ACK,         // start algo ack
	RPDATA_CTL_NUM,
}RPDATA_CTRL_TYPE;

typedef enum {
	RPDATA_ALGO_NONE 	= 0,
	RPDATA_ALGO_AEC,            // aec algo
	RPDATA_ALGO_AEC_DOWNLINK,   // aec downlink algo param
	RPDATA_ALGO_EQ,             // eq algo param
	RPDATA_ALGO_ASR,            // asr algo param
	RPDATA_ALGO_AMP,            // audio module process algo param
	RPDATA_ALGO_NUM,
}RPDATA_ALGO_TYPE;

/** The RPBUF_ERROR_TYPE enumeration defines the standard RPBUF Errors.
 *  These errors should cover most of the common failure cases.
 */
typedef enum RPDATA_ERROR_TYPE
{
	RPDATA_ERROR_NONE = 0,

	RPDATA_ERROR_INIT_FAIL = (long) 0x70001000,

	RPDATA_ERROR_CONFIG_FAIL = (long) 0x70001001,

	RPDATA_ERROR_START_FAIL = (long) 0x70001002,

	RPDATA_ERROR_PAUSE_FAIL = (long) 0x70001003,

	RPDATA_ERROR_RESUME_FAIL = (long) 0x70001004,

	RPDATA_ERROR_STOP_FAIL = (long) 0x70001005,

	RPDATA_ERROR_RELEASE_FAIL = (long) 0x70001006,

	RPDATA_ERROR_ENABLE_ALG_FAIL = (long) 0x70001007,

	RPDATA_ERROR_DUMP_MERGE_DATA = (long) 0x70001008,

	/** There was an error, but the cause of the error could not be determined */
	RPDATA_ERROR_UNDEFINED = (long)0x80000000,
	RPDATA_ERROR_MAX = 0x8FFFFFFF
} RPDATA_ERROR_TYPE;



#endif
