/*
* Copyright (c) 2019-2025 Allwinner Technology Co., Ltd. ALL rights reserved.
*
* Allwinner is a trademark of Allwinner Technology Co.,Ltd., registered in
* the the People's Republic of China and other countries.
* All Allwinner Technology Co.,Ltd. trademarks are used with permission.
*
* DISCLAIMER
* THIRD PARTY LICENCES MAY BE REQUIRED TO IMPLEMENT THE SOLUTION/PRODUCT.
* IF YOU NEED TO INTEGRATE THIRD PARTY¡¯S TECHNOLOGY (SONY, DTS, DOLBY, AVS OR MPEGLA, ETC.)
* IN ALLWINNERS¡¯SDK OR PRODUCTS, YOU SHALL BE SOLELY RESPONSIBLE TO OBTAIN
* ALL APPROPRIATELY REQUIRED THIRD PARTY LICENCES.
* ALLWINNER SHALL HAVE NO WARRANTY, INDEMNITY OR OTHER OBLIGATIONS WITH RESPECT TO MATTERS
* COVERED UNDER ANY REQUIRED THIRD PARTY LICENSE.
* YOU ARE SOLELY RESPONSIBLE FOR YOUR USAGE OF THIRD PARTY¡¯S TECHNOLOGY.
*
*
* THIS SOFTWARE IS PROVIDED BY ALLWINNER"AS IS" AND TO THE MAXIMUM EXTENT
* PERMITTED BY LAW, ALLWINNER EXPRESSLY DISCLAIMS ALL WARRANTIES OF ANY KIND,
* WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING WITHOUT LIMITATION REGARDING
* THE TITLE, NON-INFRINGEMENT, ACCURACY, CONDITION, COMPLETENESS, PERFORMANCE
* OR MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
* IN NO EVENT SHALL ALLWINNER BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
* LOSS OF USE, DATA, OR PROFITS, OR BUSINESS INTERRUPTION)
* HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
* STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
* OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#ifndef __TMR_SUN8IW20_H__
#define __TMR_SUN8IW20_H__
#include <hal_clk.h>

#define SUNXI_TMR_PBASE 0x02050000

#if defined(CONFIG_ARCH_ARM) /* ARM */
#define SUNXI_IRQ_TMR(id) (91 + (id))
#elif defined(CONFIG_ARCH_RISCV) /* RISC-V */
#define SUNXI_IRQ_TMR(id) (75 + (id))
#elif defined(CONFIG_ARCH_DSP) /* DSP */
#define SUNXI_IRQ_TMR(id) (21 + (id))
#endif

#define SUNXI_AVS_CLK_TYPE HAL_SUNXI_CCU
#define SUNXI_AVS_CLK   CLK_AVS

/* htimer */
#define SUNXI_SYS_HTIMER_BASE	0x03008000
#define SUNXI_SYS_TIMER_NUM	2
#define HTIMER_MAX_NUM		2

#define SUNXI_HTIMER_BASE(id) SUNXI_SYS_HTIMER_BASE
#define HTIMER_IRQ_EN(id)	BIT(id)
#define PENDING_BIT(id)		BIT(id)

#define HTIMER_CTL_REG_OFFSET(id)	(0x20 * (id) + 0x20)
#define HTIMER_INTVAL_LO_REG_OFFSET(id)	(0x20 * (id) + 0x24)
#define HTIMER_INTVAL_HI_REG_OFFSET(id)	(0x20 * (id) + 0x28)
#define HTIMER_CNTVAL_LO_REG_OFFSET(id)	(0x20 * (id) + 0x2c)
#define HTIMER_CNTVAL_HI_REG_OFFSET(id)	(0x20 * (id) + 0x30)

#define TIMER0_PARAMS \
{	.id = 0, \
	.reg_base = SUNXI_SYS_HTIMER_BASE, \
	.irq_num = SUNXI_IRQ_HSTIMER0, \
	.clk_type = HAL_SUNXI_CCU, .clk_id = CLK_BUS_HSTIMER, \
	.bus_type = HAL_SUNXI_CCU, .bus_id = CLK_BUS_HSTIMER, \
	.reset_type = HAL_SUNXI_RESET, .reset_id = RST_BUS_HSTIMER, \
}

#define TIMER1_PARAMS \
{	.id = 1, \
	.reg_base = SUNXI_SYS_HTIMER_BASE, \
	.irq_num = SUNXI_IRQ_HSTIMER1, \
	.clk_type = HAL_SUNXI_CCU, .clk_id = CLK_BUS_HSTIMER, \
	.bus_type = HAL_SUNXI_CCU, .bus_id = CLK_BUS_HSTIMER, \
	.reset_type = HAL_SUNXI_RESET, .reset_id = RST_BUS_HSTIMER, \
}

#if defined(CONFIG_ARCH_ARM)
#define SUNXI_IRQ_HSTIMER0	87
#define SUNXI_IRQ_HSTIMER1	88
#elif defined(CONFIG_ARCH_RISCV)
#define SUNXI_IRQ_HSTIMER0	71
#define SUNXI_IRQ_HSTIMER1	72
#elif defined(CONFIG_ARCH_DSP)
#define SUNXI_IRQ_HSTIMER0	15
#define SUNXI_IRQ_HSTIMER1	16
#endif

#endif /*__TWI_SUN8IW20_H__  */
